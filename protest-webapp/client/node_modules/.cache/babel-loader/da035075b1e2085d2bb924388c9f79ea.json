{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\Penn MCIT\\\\Fall 2020\\\\550\\\\Project\\\\repo\\\\protest-webapp\\\\client\\\\src\\\\components\\\\States.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/Dashboard.css';\nimport PageNavbar from './PageNavbar';\nimport Query7Row from './Query7Row';\nimport StateChart from './StateChart';\nexport default class States extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      selectedState: \"NEW YORK\",\n      states: [],\n      query: [],\n      queryb: [],\n      queryc: [],\n      tableAHeader: [],\n      tableBHeader: [],\n      tableCHeader: [],\n      tableATitle: [],\n      tableBTitle: [],\n      tableCTitle: [],\n      chartLabel: [],\n      chartData: [],\n      chartFull: []\n    };\n    this.showQuery = this.showQuery.bind(this);\n    this.showQueryb = this.showQueryb.bind(this);\n    this.showQueryc = this.showQueryc.bind(this);\n    this.submitState = this.submitState.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // React function that is called when the page loads\n  // if you want a query to load immediately then you need a fetch here\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/states/query5b\", //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(stateList => {\n      if (!stateList) return;\n      let stateDivs = stateList.map((state_Obj, i) =>\n      /*#__PURE__*/\n      //\n      React.createElement(\"option\", {\n        value: state_Obj.state === 'DISTRICT OF COLUMBIA' ? 'D.C.' : state_Obj.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, state_Obj.state === 'DISTRICT OF COLUMBIA' ? 'D.C.' : state_Obj.state)); //\n\n      this.setState({\n        states: stateDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n    this.showQuery();\n    this.showQueryb();\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedState: e.target.value\n    });\n  }\n\n  submitState() {\n    // if (this.state.selectedState === \"\") {\n    //   return;\n    // }\n    //console.log(this.selectedState);\n    this.showQuery();\n    this.showQueryb(); //this.showQueryc();\n  }\n\n  showQuery() {\n    var chosen = this.state.selectedState;\n\n    if (!chosen || chosen === \"\") {\n      console.log(\"No decade was chosen\");\n    }\n\n    fetch(`http://localhost:8081/states/query7/${chosen}`, //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(queryList => {\n      if (!queryList) return;\n      let queryDivs = queryList.map((query_Obj, i) => /*#__PURE__*/React.createElement(Query7Row, {\n        event_date: query_Obj.event_date.substring(0, 10),\n        event_type: query_Obj.event_type,\n        sub_event_type: query_Obj.sub_event_type,\n        fatalities: query_Obj.fatalities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }));\n      let title = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center display-5 font-weight-bold \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, \"10 Most Recent Events in the State\")];\n      let header = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"query-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 35\n        }\n      }, \"Event Date\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 35\n        }\n      }, \"Event Type\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 35\n        }\n      }, \"Subtype\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 35\n        }\n      }, \"Number of Fatalities\")))]; // Set the appropriate state variable to the value returned by the HTTP response from the server.\n\n      this.setState({\n        query: queryDivs,\n        tableATitle: title,\n        tableAHeader: header\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQueryb() {\n    //const myChartRef = this.chartRef.current.getContext(\"2d\");\n    console.log(\"B\");\n    var chosen = this.state.selectedState;\n\n    if (!chosen || chosen === \"\") {\n      console.log(\"No state was chosen\");\n    }\n\n    fetch(`http://localhost:8081/states/query9a/${chosen}`, //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(chartList => {\n      if (!chartList) return;\n      let labelb = chartList.map((query_Obj, i) => query_Obj.date.substring(5, 10));\n      let datab = chartList.map((query_Obj, i) => query_Obj.num_events);\n      let chart = [/*#__PURE__*/React.createElement(StateChart, {\n        chartData: datab,\n        chartLabel: labelb,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 20\n        }\n      })]; // let data = [];\n      // data.push({\n      //   title: 'Number of Events',\n      //   data: datab\n      // })\n\n      StateChart.updateChart(labelb, datab); // Set the appropriate state variable to the value returned by the HTTP response from the server.\n\n      this.setState({\n        chartData: datab,\n        chartLabel: labelb,\n        chartFull: chart\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQueryc() {\n    console.log(\"C\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"States\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"States\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      class: \"display-3 font-weight-bold text-white outline-this\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"State Breakdown\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container query-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedState,\n      onChange: this.handleChange,\n      className: \"dropdown\",\n      id: \"statesDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      select: true,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, \" -- Select a State -- \"), this.state.states), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"stateSubmitBtn\",\n      onClick: this.submitState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      class: \"display-4 font-weight-bold text-white outline-this\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, this.state.selectedState)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, this.state.chartFull), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, this.state.tableATitle, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"query-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, this.state.tableAHeader, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, this.state.query))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, this.state.tableBTitle, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"query-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, this.state.tableBHeader, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, this.state.queryb)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Puneet/Documents/Penn MCIT/Fall 2020/550/Project/repo/protest-webapp/client/src/components/States.js"],"names":["React","PageNavbar","Query7Row","StateChart","States","Component","constructor","props","state","selectedState","states","query","queryb","queryc","tableAHeader","tableBHeader","tableCHeader","tableATitle","tableBTitle","tableCTitle","chartLabel","chartData","chartFull","showQuery","bind","showQueryb","showQueryc","submitState","handleChange","componentDidMount","fetch","method","then","res","json","err","console","log","stateList","stateDivs","map","state_Obj","i","setState","e","target","value","chosen","queryList","queryDivs","query_Obj","event_date","substring","event_type","sub_event_type","fatalities","title","header","chartList","labelb","date","datab","num_events","chart","updateChart","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/Dashboard.css';\nimport PageNavbar from './PageNavbar';\nimport Query7Row from './Query7Row';\nimport StateChart from './StateChart';\n\n\nexport default class States extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      selectedState: \"NEW YORK\",\n      states: [],\n      query: [],\n      queryb: [],\n      queryc: [],\n      tableAHeader: [],\n      tableBHeader: [],\n      tableCHeader: [],\n      tableATitle: [],\n      tableBTitle: [],\n      tableCTitle: [],\n      chartLabel: [],\n      chartData: [],\n      chartFull: []\n    }\n    this.showQuery = this.showQuery.bind(this);\n    this.showQueryb = this.showQueryb.bind(this);\n    this.showQueryc = this.showQueryc.bind(this);\n    this.submitState = this.submitState.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  // React function that is called when the page loads\n  // if you want a query to load immediately then you need a fetch here\n  componentDidMount() {\n\n    fetch(\"http://localhost:8081/states/query5b\",  //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(stateList => {\n      if (!stateList) return;\n      let stateDivs = stateList.map((state_Obj, i) => //\n      <option value={state_Obj.state === 'DISTRICT OF COLUMBIA' ? 'D.C.' : state_Obj.state}>{state_Obj.state === 'DISTRICT OF COLUMBIA' ? 'D.C.' : state_Obj.state}</option>\n      );\n      //\n      this.setState({\n        states: stateDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n\n    this.showQuery();\n    this.showQueryb()\n\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedState: e.target.value\n    });\n  }\n\n  submitState() {\n\n    // if (this.state.selectedState === \"\") {\n    //   return;\n    // }\n    //console.log(this.selectedState);\n\n    this.showQuery();\n    this.showQueryb();\n    //this.showQueryc();\n\n  }\n\n  showQuery() {\n    var chosen = this.state.selectedState;\n    if (!chosen || chosen === \"\" ) {\n      console.log(\"No decade was chosen\");\n    }\n    fetch(`http://localhost:8081/states/query7/${chosen}`,  //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(queryList => {\n      if (!queryList) return;\n      let queryDivs = queryList.map((query_Obj, i) =>\n      <Query7Row event_date={query_Obj.event_date.substring(0,10)} event_type={query_Obj.event_type} sub_event_type={query_Obj.sub_event_type} fatalities={query_Obj.fatalities} />\n      );\n\n      let title = [\n        <div className=\"text-center display-5 font-weight-bold \">10 Most Recent Events in the State</div>\n      ];\n      let header = [\n        <div className=\"query-header\"> \n          <div className=\"header\"><strong>Event Date</strong></div>\n          <div className=\"header\"><strong>Event Type</strong></div>\n          <div className=\"header\"><strong>Subtype</strong></div>\n          <div className=\"header\"><strong>Number of Fatalities</strong></div>\n        </div>\n      ];\n      \n      // Set the appropriate state variable to the value returned by the HTTP response from the server.\n      this.setState({\n        query: queryDivs,\n        tableATitle: title,\n        tableAHeader: header\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQueryb() {\n    //const myChartRef = this.chartRef.current.getContext(\"2d\");\n    console.log(\"B\");\n    var chosen = this.state.selectedState;\n    if (!chosen || chosen === \"\" ) {\n      console.log(\"No state was chosen\");\n    }\n    fetch(`http://localhost:8081/states/query9a/${chosen}`,  //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(chartList => {\n      if (!chartList) return;\n      let labelb = chartList.map((query_Obj, i) =>\n        query_Obj.date.substring(5,10)\n      );\n      let datab = chartList.map((query_Obj, i) =>\n        query_Obj.num_events\n      );\n      let chart = [<StateChart chartData={datab} chartLabel={labelb}/>];\n      // let data = [];\n      // data.push({\n      //   title: 'Number of Events',\n      //   data: datab\n      // })\n      StateChart.updateChart(labelb,datab);\n      // Set the appropriate state variable to the value returned by the HTTP response from the server.\n      this.setState({\n        chartData: datab,\n        chartLabel: labelb,\n        chartFull: chart\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQueryc() {\n    console.log(\"C\");\n  }\n\n\n  render() {\n    return (\n      <div className=\"States\">\n\n        <PageNavbar active=\"States\" />\n        <div class = \"text-center\">\n          <h3 class=\"display-3 font-weight-bold text-white outline-this\">State Breakdown</h3>\n        </div>\n\n        <div className=\"container query-container\">\n\n          <br></br>\n          <div className=\"dropdown-container\">\n            <select value={this.state.selectedState} onChange={this.handleChange} className=\"dropdown\" id=\"statesDropdown\">\n              <option select value> -- Select a State -- </option>\n              {this.state.states}\n            </select>\n            <button className=\"submit-btn\" id=\"stateSubmitBtn\" onClick={this.submitState}>Submit</button>\n          </div>\n          <div class = \"text-center\">\n            <h3 class=\"display-4 font-weight-bold text-white outline-this\">{this.state.selectedState}</h3>\n          </div>\n          <div className=\"jumbotron\">\n            {this.state.chartFull}\n          </div>\n          <div className=\"jumbotron\">\n            {this.state.tableATitle}\n            <div className=\"query-container\">\n              {this.state.tableAHeader}\n              <div className=\"results-container\" id=\"results\">\n                {this.state.query}\n              </div>\n            </div>\n          </div>\n          <div className=\"jumbotron\">\n            {this.state.tableBTitle}\n            <div className=\"query-container\">\n              {this.state.tableBHeader}\n              <div className=\"results-container\" id=\"results\">\n                {this.state.queryb}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}