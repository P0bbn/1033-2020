{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\Penn MCIT\\\\Fall 2020\\\\550\\\\VM\\\\completedhw2\\\\hw2test\\\\client\\\\src\\\\components\\\\Home.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/Dashboard.css';\nimport PageNavbar from './PageNavbar';\nimport Query2Row from './Query2Row';\nimport Query3Row from './Query3Row';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      buttonList: [],\n      queryResults: [],\n      tableHeader: [],\n      tableTitle: [],\n      showJumbo: false\n    };\n    this.showQuery2 = this.showQuery2.bind(this);\n    this.showQuery3 = this.showQuery3.bind(this); //this.showMovies = this.showMovies.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    let buttons = [/*#__PURE__*/React.createElement(\"button\", {\n      class: \"buttons\",\n      id: this.props.id,\n      onClick: () => this.showQuery2(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"Protests per State\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"buttons\",\n      id: this.props.id,\n      onClick: () => this.showQuery3(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, \"Protests by Type\")];\n    this.setState({\n      buttonList: buttons\n    });\n    /*\n    fetch(\"http://localhost:8081/genres/query2\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let query2Divs = genreList.map((query2_Obj, i) =>\n      <Query2Row state={query2_Obj.state} population={query2_Obj.population} peaceful={query2_Obj.peaceful} non_peaceful={query2_Obj.non_peaceful} peaceful_per_100K={query2_Obj.peaceful_per_100K} non_peaceful_per_100K={query2_Obj.non_peaceful_per_100K}/>\n      );\n       \n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        query2: query2Divs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n    */\n  }\n\n  showQuery2() {\n    fetch(\"http://localhost:8081/country/query2\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let query2Divs = genreList.map((query2_Obj, i) => /*#__PURE__*/React.createElement(Query2Row, {\n        state: query2_Obj.state == 'DISTRICT OF COLUMBIA' ? 'D.C' : query2_Obj.state,\n        population: query2_Obj.population == null ? '0' : query2_Obj.population,\n        peaceful: query2_Obj.peaceful == null ? '0' : query2_Obj.peaceful,\n        non_peaceful: query2_Obj.non_peaceful == null ? '0' : query2_Obj.non_peaceful,\n        peaceful_per_100K: query2_Obj.peaceful_per_100K == null ? '0' : query2_Obj.peaceful_per_100K,\n        non_peaceful_per_100K: query2_Obj.non_peaceful_per_100K == null ? '0' : query2_Obj.non_peaceful_per_100K,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }));\n      let header = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"query-header table-responsive-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 35\n        }\n      }, \"State\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 35\n        }\n      }, \"Population\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }\n      }, \"# Peaceful Protests\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 35\n        }\n      }, \"# Violent Protests\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 35\n        }\n      }, \"# Peaceful per 100K\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 35\n        }\n      }, \"# Violent per 100K\")))];\n      let title = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"header text-center display-5 font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, \"Number of Peaceful and Violent Protests in each State in 2020\")]; // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        queryResults: query2Divs,\n        tableTitle: title,\n        tableHeader: header,\n        showJumbo: true\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQuery3() {\n    fetch(\"http://localhost:8081/country/query3\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(query3List => {\n      if (!query3List) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let query3Divs = query3List.map((query3_Obj, i) => /*#__PURE__*/React.createElement(Query3Row, {\n        event: query3_Obj.event_type,\n        sub_event: query3_Obj.sub_event_type,\n        count: query3_Obj.count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }));\n      let title = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center display-5 font-weight-bold \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, \"Types and Count of Different Protests throughout the US\")];\n      let header = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"query-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 35\n        }\n      }, \"Event Type\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 35\n        }\n      }, \"Subtype\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 35\n        }\n      }, \"Amount\")))]; // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        queryResults: query3Divs,\n        tableTitle: title,\n        tableHeader: header,\n        showJumbo: true\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    let isPressed = this.state.showJumbo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      class: \"display-3 font-weight-bold text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Protest Data in the United States in 2020\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container query-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, this.state.buttonList), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }), isPressed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"query-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, this.state.tableTitle, this.state.tableHeader, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container pre-scrollable\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, this.state.queryResults))) : null, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./us-map.png\",\n      class: \"rounded mx-auto d-block\",\n      alt: \"States with Protests during 2020\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n/*\n<div className=\"query-header\"> \n  <div className=\"header\"><strong>State</strong></div>\n  <div className=\"header\"><strong>Population</strong></div>\n  <div className=\"header\"><strong># Peaceful Protests</strong></div>\n  <div className=\"header\"><strong># Violent Protests</strong></div>\n  <div className=\"header\"><strong># Peaceful per 100K</strong></div>\n  <div className=\"header\"><strong># Violent per 100K</strong></div>\n</div>\n*/\n\n/*\n<div className=\"text-center display-5 font-weight-bold\">Number of Peaceful and Violent Protests in each State in 2020</div>\n*/","map":{"version":3,"sources":["C:/Users/Puneet/Documents/Penn MCIT/Fall 2020/550/VM/completedhw2/hw2test/client/src/components/Home.js"],"names":["React","PageNavbar","Query2Row","Query3Row","Home","Component","constructor","props","state","buttonList","queryResults","tableHeader","tableTitle","showJumbo","showQuery2","bind","showQuery3","componentDidMount","buttons","id","setState","fetch","method","then","res","json","err","console","log","genreList","query2Divs","map","query2_Obj","i","population","peaceful","non_peaceful","peaceful_per_100K","non_peaceful_per_100K","header","title","query3List","query3Divs","query3_Obj","event_type","sub_event_type","count","render","isPressed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/Dashboard.css';\nimport PageNavbar from './PageNavbar';\nimport Query2Row from './Query2Row';\nimport Query3Row from './Query3Row';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      buttonList: [],\n      queryResults: [],\n      tableHeader: [],\n      tableTitle: [],\n      showJumbo: false\n    }\n    this.showQuery2 = this.showQuery2.bind(this);\n    this.showQuery3 = this.showQuery3.bind(this);\n    //this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    let buttons = [\n      <button class=\"buttons\" id={this.props.id} onClick={() => this.showQuery2()}>Protests per State</button>,\n      <button class=\"buttons\" id={this.props.id} onClick={() => this.showQuery3()}>Protests by Type</button>\n    ];\n\n    this.setState({\n        buttonList: buttons\n    });\n    /*\n    fetch(\"http://localhost:8081/genres/query2\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let query2Divs = genreList.map((query2_Obj, i) =>\n      <Query2Row state={query2_Obj.state} population={query2_Obj.population} peaceful={query2_Obj.peaceful} non_peaceful={query2_Obj.non_peaceful} peaceful_per_100K={query2_Obj.peaceful_per_100K} non_peaceful_per_100K={query2_Obj.non_peaceful_per_100K}/>\n      );\n\n      \n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        query2: query2Divs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n    */\n  }\n\n  showQuery2() {\n    fetch(\"http://localhost:8081/country/query2\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let query2Divs = genreList.map((query2_Obj, i) =>\n      <Query2Row state={query2_Obj.state == 'DISTRICT OF COLUMBIA' ? 'D.C' : query2_Obj.state} population={query2_Obj.population == null ? '0' : query2_Obj.population} peaceful={query2_Obj.peaceful == null ? '0' : query2_Obj.peaceful} non_peaceful={query2_Obj.non_peaceful==null ? '0' : query2_Obj.non_peaceful} peaceful_per_100K={query2_Obj.peaceful_per_100K == null ? '0' : query2_Obj.peaceful_per_100K} non_peaceful_per_100K={query2_Obj.non_peaceful_per_100K == null ? '0' : query2_Obj.non_peaceful_per_100K}/>\n      );\n\n      let header = [\n        <div className=\"query-header table-responsive-md\"> \n          <div className=\"header\"><strong>State</strong></div>\n          <div className=\"header\"><strong>Population</strong></div>\n          <div className=\"header\"><strong># Peaceful Protests</strong></div>\n          <div className=\"header\"><strong># Violent Protests</strong></div>\n          <div className=\"header\"><strong># Peaceful per 100K</strong></div>\n          <div className=\"header\"><strong># Violent per 100K</strong></div>\n        </div>\n      ];\n\n      let title = [\n        <div className=\"header text-center display-5 font-weight-bold\">Number of Peaceful and Violent Protests in each State in 2020</div>\n      ];\n      \n\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        queryResults: query2Divs,\n        tableTitle: title,\n        tableHeader: header,\n        showJumbo: true\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQuery3() {\n    fetch(\"http://localhost:8081/country/query3\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(query3List => {\n      if (!query3List) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let query3Divs = query3List.map((query3_Obj, i) =>\n      <Query3Row event={query3_Obj.event_type} sub_event={query3_Obj.sub_event_type} count={query3_Obj.count}/>\n      );\n\n      let title = [\n        <div className=\"text-center display-5 font-weight-bold \">Types and Count of Different Protests throughout the US</div>\n      ];\n      let header = [\n        <div className=\"query-header\"> \n          <div className=\"header\"><strong>Event Type</strong></div>\n          <div className=\"header\"><strong>Subtype</strong></div>\n          <div className=\"header\"><strong>Amount</strong></div>\n        </div>\n      ];\n\n\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        queryResults: query3Divs,\n        tableTitle: title,\n        tableHeader: header,\n        showJumbo: true\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    let isPressed = this.state.showJumbo;\n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"Home\" />\n        <br></br>\n        <div class = \"text-center\">\n          <h3 class=\"display-3 font-weight-bold text-white\">Protest Data in the United States in 2020</h3>\n        </div>\n        <br></br>\n        <br></br>\n        \n        <div className=\"container query-container\">\n\n            <div className=\"buttons-container\">\n              {this.state.buttonList}\n            </div>\n\n          <br></br>\n          { isPressed ?\n          <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"query-container\">\n            {this.state.tableTitle}\n              {this.state.tableHeader}\n              <div className=\"results-container pre-scrollable\" id=\"results\">\n                {this.state.queryResults}\n              </div>\n            </div>\n          </div>\n          :\n          null\n          }\n          <img src='./us-map.png' class=\"rounded mx-auto d-block\" alt=\"States with Protests during 2020\"></img>\n          <br></br>\n          <br></br>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n<div className=\"query-header\"> \n  <div className=\"header\"><strong>State</strong></div>\n  <div className=\"header\"><strong>Population</strong></div>\n  <div className=\"header\"><strong># Peaceful Protests</strong></div>\n  <div className=\"header\"><strong># Violent Protests</strong></div>\n  <div className=\"header\"><strong># Peaceful per 100K</strong></div>\n  <div className=\"header\"><strong># Violent per 100K</strong></div>\n</div>\n*/\n\n/*\n<div className=\"text-center display-5 font-weight-bold\">Number of Peaceful and Violent Protests in each State in 2020</div>\n*/"]},"metadata":{},"sourceType":"module"}