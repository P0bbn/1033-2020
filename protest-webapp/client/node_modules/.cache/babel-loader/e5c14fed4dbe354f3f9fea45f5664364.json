{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\Penn MCIT\\\\Fall 2020\\\\550\\\\Project\\\\repo\\\\protest-webapp\\\\client\\\\src\\\\components\\\\stateChart.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js';\n\nclass stateChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n    this.state = {\n      chartData: props.chartData\n    };\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'line',\n      data: {\n        labels: this.props.data.map(d => d.time),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          fill: 'none',\n          backgroundColor: this.props.color,\n          pointRadius: 2,\n          borderColor: this.props.color,\n          lineTension: 0\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    });\n  }\n\n} //export default stateChart;\n\n/*\nreturn(\n            <div className=\"stateChart\">\n\n                <Line\n                    data={this.props.chartData}\n                    options={{\n                        title:{\n                            display:this.props.displayTitle,\n                            text: 'Number of Events per Day ' + this.props.location,\n                            fontsize:25\n                        },\n                        legend:{\n                            display:this.props.displayLegend,\n                            position:this.props.legendPosition\n                        }\n\n                    }}\n                />\n            </div>\n        );\n*/","map":{"version":3,"sources":["C:/Users/Puneet/Documents/Penn MCIT/Fall 2020/550/Project/repo/protest-webapp/client/src/components/stateChart.js"],"names":["React","Line","Chart","stateChart","Component","constructor","props","chartRef","createRef","state","chartData","componentDidMount","myChart","canvasRef","current","type","data","labels","map","d","time","datasets","label","title","value","fill","backgroundColor","color","pointRadius","borderColor","lineTension","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBP,KAAK,CAACQ,SAAN,EAAhB;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,SAAS,EAAEJ,KAAK,CAACI;AADV,KAAX;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,OAAL,GAAe,IAAIV,KAAJ,CAAU,KAAKW,SAAL,CAAeC,OAAzB,EAAkC;AAC7CC,MAAAA,IAAI,EAAE,MADuC;AAE7CC,MAAAA,IAAI,EAAE;AACLC,QAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWU,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAA3B,CADH;AAELC,QAAAA,QAAQ,EAAE,CAAC;AACVC,UAAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWiB,KADR;AAEVP,UAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACK,KAA3B,CAFI;AAGVC,UAAAA,IAAI,EAAE,MAHI;AAIVC,UAAAA,eAAe,EAAE,KAAKpB,KAAL,CAAWqB,KAJlB;AAKVC,UAAAA,WAAW,EAAE,CALH;AAMVC,UAAAA,WAAW,EAAE,KAAKvB,KAAL,CAAWqB,KANd;AAOVG,UAAAA,WAAW,EAAE;AAPH,SAAD;AAFL;AAFuC,KAAlC,CAAf;AAeA;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,GAAG,EAAE,KAAKxB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AA/BmC,C,CAmCxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Line} from 'react-chartjs-2';\nimport Chart from 'chart.js'\n\n\nclass stateChart extends React.Component{\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n        this.state={\n            chartData: props.chartData\n        }\n    }\n\n    componentDidMount() {\n    \tthis.myChart = new Chart(this.canvasRef.current, {\n\t        type: 'line',\n\t        data: {\n\t        \tlabels: this.props.data.map(d => d.time),\n\t        \tdatasets: [{\n\t        \t\tlabel: this.props.title,\n\t        \t\tdata: this.props.data.map(d => d.value),\n\t        \t\tfill: 'none',\n\t        \t\tbackgroundColor: this.props.color,\n\t        \t\tpointRadius: 2,\n\t        \t\tborderColor: this.props.color,\n\t        \t\tlineTension: 0\n\t        \t}]\n\t        }\n    \t});\n    }\n\n    render() {\n        return(\n            <canvas ref={this.chartRef} />\n        );\n    }\n\n}\n\n//export default stateChart;\n\n/*\nreturn(\n            <div className=\"stateChart\">\n\n                <Line\n                    data={this.props.chartData}\n                    options={{\n                        title:{\n                            display:this.props.displayTitle,\n                            text: 'Number of Events per Day ' + this.props.location,\n                            fontsize:25\n                        },\n                        legend:{\n                            display:this.props.displayLegend,\n                            position:this.props.legendPosition\n                        }\n\n                    }}\n                />\n            </div>\n        );\n*/"]},"metadata":{},"sourceType":"module"}