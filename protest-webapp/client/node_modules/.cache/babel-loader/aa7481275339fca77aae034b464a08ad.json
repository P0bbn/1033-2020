{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\Penn MCIT\\\\Fall 2020\\\\550\\\\Project\\\\repo\\\\protest-webapp\\\\client\\\\src\\\\components\\\\RaceChart.js\";\n\n/*\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js'\r\n\r\n\r\nvar data = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'All Event Types',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75,152,232,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(175,92,92,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nexport default class RaceChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = React.createRef();\r\n        this.state = {\r\n            labels: props.chartLabel,\r\n            dataPoints: props.chartData\r\n        }\r\n        data.datasets[0].data = this.state.dataPoints;\r\n        data.labels = this.state.labels;\r\n\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n\r\n    }\r\n    componentDidUpdate(prevProps, nextProps) {\r\n        if(prevProps !== this.props){\r\n            console.log(nextProps);\r\n            this.setState({\r\n                labels: this.props.chartLabel,\r\n                dataPoints: this.props.chartData\r\n            });\r\n            data.datasets[0].data = this.state.dataPoints;\r\n            data.labels = this.state.labels\r\n            // this.update();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props.chartData);\r\n    return (\r\n        <div>\r\n        <h2 class=\"chart-title \">Number of Events, Per Capita, in Relation to a County's White Population</h2>\r\n            <Line ref=\"chart\" data={data}/>\r\n        </div>\r\n    );\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //let theChart = new Chart();\r\n        data.datasets[0].data = this.props.chartData\r\n        const { datasets } = this.refs.chart.chartInstance.data\r\n        console.log(datasets[0].data);\r\n    }\r\n}\r\n*/\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js';\nvar data = {\n  labels: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100],\n  datasets: [{\n    label: '',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: []\n  }]\n};\nvar options = {\n  scales: {\n    yAxes: [{\n      ticks: {\n        suggestedMin: 0,\n        suggestedMax: 10\n      }\n    }],\n    xAxes: [{\n      ticks: {\n        suggestedMin: 0,\n        suggestedMax: 100\n      }\n    }]\n  }\n};\nexport default class RaceChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n    this.state = {\n      labels: props.chartLabel,\n      dataPoints: props.chartData\n    };\n    data.datasets[0].data = this.state.dataPoints;\n    data.labels = this.state.labels;\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n  }\n\n  componentDidUpdate(prevProps, nextProps) {\n    if (prevProps !== this.props) {\n      console.log(nextProps);\n      this.setState({\n        labels: this.props.chartLabel,\n        dataPoints: this.props.chartData\n      });\n      data.datasets[0].data = this.state.dataPoints;\n      data.labels = this.state.labels;\n    }\n  }\n\n  render() {\n    console.log(this.props.chartData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      ref: \"chart\",\n      data: data,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  componentDidMount() {\n    //let theChart = new Chart();\n    data.datasets[0].data = this.props.chartData;\n    const {\n      datasets\n    } = this.refs.chart.chartInstance.data;\n    console.log(datasets[0].data);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Puneet/Documents/Penn MCIT/Fall 2020/550/Project/repo/protest-webapp/client/src/components/RaceChart.js"],"names":["React","Line","Chart","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","scales","yAxes","ticks","suggestedMin","suggestedMax","xAxes","RaceChart","Component","constructor","props","chartRef","createRef","state","chartLabel","dataPoints","chartData","componentDidUpdate","bind","prevProps","nextProps","console","log","setState","render","componentDidMount","refs","chart","chartInstance"],"mappings":"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","sourcesContent":["/*\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js'\r\n\r\n\r\nvar data = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'All Event Types',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75,152,232,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(175,92,92,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nexport default class RaceChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = React.createRef();\r\n        this.state = {\r\n            labels: props.chartLabel,\r\n            dataPoints: props.chartData\r\n        }\r\n        data.datasets[0].data = this.state.dataPoints;\r\n        data.labels = this.state.labels;\r\n\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n\r\n    }\r\n    componentDidUpdate(prevProps, nextProps) {\r\n        if(prevProps !== this.props){\r\n            console.log(nextProps);\r\n            this.setState({\r\n                labels: this.props.chartLabel,\r\n                dataPoints: this.props.chartData\r\n            });\r\n            data.datasets[0].data = this.state.dataPoints;\r\n            data.labels = this.state.labels\r\n            // this.update();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props.chartData);\r\n    return (\r\n        <div>\r\n        <h2 class=\"chart-title \">Number of Events, Per Capita, in Relation to a County's White Population</h2>\r\n            <Line ref=\"chart\" data={data}/>\r\n        </div>\r\n    );\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //let theChart = new Chart();\r\n        data.datasets[0].data = this.props.chartData\r\n        const { datasets } = this.refs.chart.chartInstance.data\r\n        console.log(datasets[0].data);\r\n    }\r\n}\r\n*/\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js'\r\n\r\n\r\nvar data = {\r\n  labels: [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100],\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75,192,192,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(75,192,192,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: []\r\n    }\r\n  ]\r\n};\r\n\r\nvar options = {\r\n  scales: {\r\n    yAxes: [{\r\n      ticks: {\r\n        suggestedMin: 0,\r\n        suggestedMax: 10\r\n      }\r\n    }],\r\n    xAxes: [{\r\n      ticks: {\r\n        suggestedMin: 0,\r\n        suggestedMax: 100\r\n      }\r\n    }]\r\n  }\r\n}\r\n\r\nexport default class RaceChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = React.createRef();\r\n        this.state = {\r\n            labels: props.chartLabel,\r\n            dataPoints: props.chartData\r\n        }\r\n        data.datasets[0].data = this.state.dataPoints;\r\n        data.labels = this.state.labels;\r\n\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n\r\n    }\r\n    componentDidUpdate(prevProps, nextProps) {\r\n        if(prevProps !== this.props){\r\n            console.log(nextProps);\r\n            this.setState({\r\n                labels: this.props.chartLabel,\r\n                dataPoints: this.props.chartData\r\n            });\r\n            data.datasets[0].data = this.state.dataPoints;\r\n            data.labels = this.state.labels\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props.chartData);\r\n    return (\r\n        <div>\r\n            <Line ref=\"chart\" data={data} options={options}/>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        //let theChart = new Chart();\r\n        data.datasets[0].data = this.props.chartData\r\n        const { datasets } = this.refs.chart.chartInstance.data\r\n        console.log(datasets[0].data);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}