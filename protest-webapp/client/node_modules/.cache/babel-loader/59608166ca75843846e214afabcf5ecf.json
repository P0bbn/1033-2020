{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\Penn MCIT\\\\Fall 2020\\\\550\\\\VM\\\\completedhw2\\\\hw2test\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport Query2Row from './Query2Row';\nimport Query3Row from './Query3Row';\nimport DashboardMovieRow from './DashboardMovieRow';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      buttonList: [],\n      query2: [],\n      query3: [],\n      query2out: [],\n      query3out: [],\n      movies: []\n    };\n    this.showQuery2 = this.showQuery2.bind(this);\n    this.showQuery3 = this.showQuery3.bind(this);\n    this.showMovies = this.showMovies.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    let buttons = [/*#__PURE__*/React.createElement(\"button\", {\n      class: \"genre\",\n      id: this.props.id,\n      onClick: () => this.showQuery2(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, \"Breakdown by State\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"genre\",\n      id: this.props.id,\n      onClick: () => this.showQuery3(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, \"Breakdown by Protests\")];\n    this.setState({\n      buttonList: buttons\n    });\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let query2Divs = genreList.map((query2_Obj, i) => /*#__PURE__*/React.createElement(Query2Row, {\n        state: query2_Obj.state,\n        population: query2_Obj.population,\n        peaceful: query2_Obj.peaceful,\n        non_peaceful: query2_Obj.non_peaceful,\n        peaceful_per_100K: query2_Obj.peaceful_per_100K,\n        non_peaceful_per_100K: query2_Obj.non_peaceful_per_100K,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      })); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        query2: query2Divs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQuery2() {\n    fetch(\"http://localhost:8081/genres/query2\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let query2Divs = genreList.map((query2_Obj, i) => /*#__PURE__*/React.createElement(Query2Row, {\n        state: query2_Obj.state,\n        population: query2_Obj.population,\n        peaceful: query2_Obj.peaceful,\n        non_peaceful: query2_Obj.non_peaceful,\n        peaceful_per_100K: query2_Obj.peaceful_per_100K,\n        non_peaceful_per_100K: query2_Obj.non_peaceful_per_100K,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }));\n      let fullText = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"jumbotron\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center display-5 font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, \"Number of Peaceful and Violent Protests in each State in 2020\"), \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movies-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movies-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 39\n        }\n      }, \"State\")), \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 39\n        }\n      }, \"Population\")), \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 39\n        }\n      }, \"# Peaceful Protests\")), \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 39\n        }\n      }, \"# Violent Protests\")), \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 39\n        }\n      }, \"# Peaceful per 100K\")), \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 39\n        }\n      }, \"# Violent per 100K\")), \",\"), \",\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"results-container\",\n        id: \"results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, this.state.query2), \",\"), \",\")]; // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        query2: query2Divs,\n        query2out: fullText\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQuery3() {\n    fetch(\"http://localhost:8081/genres/query3\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(query3List => {\n      if (!query3List) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let query3Divs = query3List.map((query3_Obj, i) => /*#__PURE__*/React.createElement(Query3Row, {\n        event: query3_Obj.event_type,\n        sub_event: query3_Obj.sub_event_type,\n        count: query3_Obj.count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }\n      })); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        query3: query3Divs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  showMovies(genre) {\n    fetch(`http://localhost:8081/genres/${genre}`, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(movieList => {\n      if (!movieList) return;\n      let movieRows = movieList.map((movieObj, i) => /*#__PURE__*/React.createElement(DashboardMovieRow, {\n        title: movieObj.title,\n        rating: movieObj.rating,\n        votes: movieObj.vote_count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }));\n      this.setState({\n        movies: movieRows\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      class: \"display-3 font-weight-bold text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"Protest Data in the United States in 2020\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, this.state.buttonList), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), this.state.query2out));\n  }\n\n}\n/*\n<div className=\"jumbotron\">\n<div className=\"text-center display-5 font-weight-bold\">Number of Peaceful and Violent Protests in each State in 2020</div>\n  <div className=\"movies-container\">\n    <div className=\"movies-header\"> \n      <div className=\"header\"><strong>State</strong></div>\n      <div className=\"header\"><strong>Population</strong></div>\n      <div className=\"header\"><strong># Peaceful Protests</strong></div>\n      <div className=\"header\"><strong># Violent Protests</strong></div>\n      <div className=\"header\"><strong># Peaceful per 100K</strong></div>\n      <div className=\"header\"><strong># Violent per 100K</strong></div>\n    </div>\n    <div className=\"results-container\" id=\"results\">\n      {this.state.query2}\n    </div>\n  </div>\n</div>\n*/","map":{"version":3,"sources":["C:/Users/Puneet/Documents/Penn MCIT/Fall 2020/550/VM/completedhw2/hw2test/client/src/components/Dashboard.js"],"names":["React","PageNavbar","Query2Row","Query3Row","DashboardMovieRow","Home","Component","constructor","props","state","buttonList","query2","query3","query2out","query3out","movies","showQuery2","bind","showQuery3","showMovies","componentDidMount","buttons","id","setState","fetch","method","then","res","json","err","console","log","genreList","query2Divs","map","query2_Obj","i","population","peaceful","non_peaceful","peaceful_per_100K","non_peaceful_per_100K","fullText","query3List","query3Divs","query3_Obj","event_type","sub_event_type","count","genre","movieList","movieRows","movieObj","title","rating","vote_count","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport Query2Row from './Query2Row';\nimport Query3Row from './Query3Row';\nimport DashboardMovieRow from './DashboardMovieRow';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      buttonList: [],\n      query2: [],\n      query3: [],\n      query2out: [],\n      query3out: [],\n      movies: []\n    }\n    this.showQuery2 = this.showQuery2.bind(this);\n    this.showQuery3 = this.showQuery3.bind(this);\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    let buttons = [\n      <button class=\"genre\" id={this.props.id} onClick={() => this.showQuery2()}>Breakdown by State</button>,\n      <button class=\"genre\" id={this.props.id} onClick={() => this.showQuery3()}>Breakdown by Protests</button>\n    ];\n\n    this.setState({\n        buttonList: buttons\n    });\n\n    fetch(\"http://localhost:8081/genres\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let query2Divs = genreList.map((query2_Obj, i) =>\n      <Query2Row state={query2_Obj.state} population={query2_Obj.population} peaceful={query2_Obj.peaceful} non_peaceful={query2_Obj.non_peaceful} peaceful_per_100K={query2_Obj.peaceful_per_100K} non_peaceful_per_100K={query2_Obj.non_peaceful_per_100K}/>\n      );\n\n      \n\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        query2: query2Divs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQuery2() {\n    fetch(\"http://localhost:8081/genres/query2\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(genreList => {\n      if (!genreList) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let query2Divs = genreList.map((query2_Obj, i) =>\n      <Query2Row state={query2_Obj.state} population={query2_Obj.population} peaceful={query2_Obj.peaceful} non_peaceful={query2_Obj.non_peaceful} peaceful_per_100K={query2_Obj.peaceful_per_100K} non_peaceful_per_100K={query2_Obj.non_peaceful_per_100K}/>\n      );\n\n      let fullText = [\n        <div className=\"jumbotron\">,\n        <div className=\"text-center display-5 font-weight-bold\">Number of Peaceful and Violent Protests in each State in 2020</div>,\n          <div className=\"movies-container\">,\n            <div className=\"movies-header\">,\n              <div className=\"header\"><strong>State</strong></div>,\n              <div className=\"header\"><strong>Population</strong></div>,\n              <div className=\"header\"><strong># Peaceful Protests</strong></div>,\n              <div className=\"header\"><strong># Violent Protests</strong></div>,\n              <div className=\"header\"><strong># Peaceful per 100K</strong></div>,\n              <div className=\"header\"><strong># Violent per 100K</strong></div>,\n            </div>,\n            <div className=\"results-container\" id=\"results\">\n              {this.state.query2}\n            </div>,\n          </div>,\n        </div>\n      ]\n\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        query2: query2Divs,\n        query2out : fullText\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQuery3() {\n    fetch(\"http://localhost:8081/genres/query3\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(query3List => {\n      if (!query3List) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      let query3Divs = query3List.map((query3_Obj, i) =>\n      <Query3Row event={query3_Obj.event_type} sub_event={query3_Obj.sub_event_type} count={query3_Obj.count}/>\n      );\n\n      \n\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      this.setState({\n        query3: query3Divs\n      });\n\n      \n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n    fetch(`http://localhost:8081/genres/${genre}`,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(movieList => {\n      if (!movieList) return;\n\n      let movieRows = movieList.map((movieObj, i) =>\n      <DashboardMovieRow title={movieObj.title} rating={movieObj.rating} votes={movieObj.vote_count} />\n      );\n      \n      this.setState({\n        movies: movieRows\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"Home\" />\n        <div class = \"text-center\">\n                <h3 class=\"display-3 font-weight-bold text-white\">Protest Data in the United States in 2020</h3>\n            </div>\n        \n        <div className=\"container movies-container\">\n\n            <div className=\"genres-container\">\n              {this.state.buttonList}\n            </div>\n\n          <br></br>\n          {this.state.query2out}\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n<div className=\"jumbotron\">\n<div className=\"text-center display-5 font-weight-bold\">Number of Peaceful and Violent Protests in each State in 2020</div>\n  <div className=\"movies-container\">\n    <div className=\"movies-header\"> \n      <div className=\"header\"><strong>State</strong></div>\n      <div className=\"header\"><strong>Population</strong></div>\n      <div className=\"header\"><strong># Peaceful Protests</strong></div>\n      <div className=\"header\"><strong># Violent Protests</strong></div>\n      <div className=\"header\"><strong># Peaceful per 100K</strong></div>\n      <div className=\"header\"><strong># Violent per 100K</strong></div>\n    </div>\n    <div className=\"results-container\" id=\"results\">\n      {this.state.query2}\n    </div>\n  </div>\n</div>\n*/"]},"metadata":{},"sourceType":"module"}