{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\Penn MCIT\\\\Fall 2020\\\\550\\\\Project\\\\repo\\\\protest-webapp\\\\client\\\\src\\\\components\\\\States.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/Dashboard.css';\nimport PageNavbar from './PageNavbar';\nimport Query7Row from './Query7Row';\nexport default class States extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      selectedState: \"\",\n      states: [],\n      query: [],\n      queryb: [],\n      queryc: [],\n      tableAHeader: [],\n      tableBHeader: [],\n      tableCHeader: [],\n      tableATitle: [],\n      tableBTitle: [],\n      tableCTitle: []\n    };\n    this.showQuery = this.showQuery.bind(this);\n    this.showQueryb = this.showQueryb.bind(this);\n    this.showQueryc = this.showQueryc.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // React function that is called when the page loads\n  // if you want a query to load immediately then you need a fetch here\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/states/query5b\", //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(stateList => {\n      if (!stateList) return;\n      let stateDivs = stateList.map((state_Obj, i) =>\n      /*#__PURE__*/\n      //\n      React.createElement(\"option\", {\n        value: state_Obj.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, state_Obj.state)); //\n\n      this.setState({\n        states: stateDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedState: e.target.value\n    });\n  }\n\n  submitState() {\n    // if (this.state.selectedState === \"\") {\n    //   return;\n    // }\n    //console.log(this.selectedState);\n    this.showQuery(); //this.showQueryb();\n    //this.showQueryc();\n  }\n\n  showQuery() {\n    var chosen = this.state.selectedDecade;\n    fetch(\"http://localhost:8081/states/query7/${chosen}\", //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(queryList => {\n      if (!queryList) return;\n      let queryDivs = queryList.map((query_Obj, i) => /*#__PURE__*/React.createElement(Query7Row, {\n        event_date: query_Obj.event_date,\n        event_type: query_Obj.event_type,\n        sub_event_type: query_Obj.sub_event_type,\n        fatalities: query_Obj.fatalities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }));\n      let title = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center display-5 font-weight-bold \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, \"10 Most Recent Events in the State\")];\n      let header = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"query-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 35\n        }\n      }, \"Event Date\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 35\n        }\n      }, \"Event Type\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 35\n        }\n      }, \"Subtype\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 35\n        }\n      }, \"Number of Fatalities\")))]; // Set the appropriate state variable to the value returned by the HTTP response from the server.\n\n      this.setState({\n        query: queryDivs,\n        tableATitle: title,\n        tableAHeader: header\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQueryb() {\n    console.log(\"B\");\n  }\n\n  showQueryc() {\n    console.log(\"C\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"States\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"States\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      class: \"display-3 font-weight-bold text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container query-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedState,\n      onChange: this.handleChange,\n      className: \"dropdown\",\n      id: \"statesDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      select: true,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, \" -- Select a State -- \"), this.state.states), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"stateSubmitBtn\",\n      onClick: this.submitState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, this.state.tableATitle, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"query-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, this.state.tableAHeader, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, this.state.query)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Puneet/Documents/Penn MCIT/Fall 2020/550/Project/repo/protest-webapp/client/src/components/States.js"],"names":["React","PageNavbar","Query7Row","States","Component","constructor","props","state","selectedState","states","query","queryb","queryc","tableAHeader","tableBHeader","tableCHeader","tableATitle","tableBTitle","tableCTitle","showQuery","bind","showQueryb","showQueryc","handleChange","componentDidMount","fetch","method","then","res","json","err","console","log","stateList","stateDivs","map","state_Obj","i","setState","e","target","value","submitState","chosen","selectedDecade","queryList","queryDivs","query_Obj","event_date","event_type","sub_event_type","fatalities","title","header","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style/Dashboard.css';\nimport PageNavbar from './PageNavbar';\nimport Query7Row from './Query7Row';\n\nexport default class States extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      selectedState: \"\",\n      states: [],\n      query: [],\n      queryb: [],\n      queryc: [],\n      tableAHeader: [],\n      tableBHeader: [],\n      tableCHeader: [],\n      tableATitle: [],\n      tableBTitle: [],\n      tableCTitle: []\n    }\n    this.showQuery = this.showQuery.bind(this);\n    this.showQueryb = this.showQueryb.bind(this);\n    this.showQueryc = this.showQueryc.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  // React function that is called when the page loads\n  // if you want a query to load immediately then you need a fetch here\n  componentDidMount() {\n\n    fetch(\"http://localhost:8081/states/query5b\",  //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(stateList => {\n      if (!stateList) return;\n      let stateDivs = stateList.map((state_Obj, i) => //\n      <option value={state_Obj.state}>{state_Obj.state}</option>\n      );\n      //\n      this.setState({\n        states: stateDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedState: e.target.value\n    });\n  }\n\n  submitState() {\n\n    // if (this.state.selectedState === \"\") {\n    //   return;\n    // }\n    //console.log(this.selectedState);\n\n    this.showQuery();\n    //this.showQueryb();\n    //this.showQueryc();\n\n  }\n\n  showQuery() {\n    var chosen = this.state.selectedDecade;\n    fetch(\"http://localhost:8081/states/query7/${chosen}\",  //change to appropriate URL based on index.js in server folder\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(queryList => {\n      if (!queryList) return;\n      let queryDivs = queryList.map((query_Obj, i) =>\n      <Query7Row event_date={query_Obj.event_date} event_type={query_Obj.event_type} sub_event_type={query_Obj.sub_event_type} fatalities={query_Obj.fatalities} />\n      );\n\n      let title = [\n        <div className=\"text-center display-5 font-weight-bold \">10 Most Recent Events in the State</div>\n      ];\n      let header = [\n        <div className=\"query-header\"> \n          <div className=\"header\"><strong>Event Date</strong></div>\n          <div className=\"header\"><strong>Event Type</strong></div>\n          <div className=\"header\"><strong>Subtype</strong></div>\n          <div className=\"header\"><strong>Number of Fatalities</strong></div>\n        </div>\n      ];\n      \n      // Set the appropriate state variable to the value returned by the HTTP response from the server.\n      this.setState({\n        query: queryDivs,\n        tableATitle: title,\n        tableAHeader: header\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showQueryb() {\n    console.log(\"B\");\n  }\n\n  showQueryc() {\n    console.log(\"C\");\n  }\n\n\n  render() {    \n    return (\n      <div className=\"States\">\n\n        <PageNavbar active=\"States\" />\n        <div class = \"text-center\">\n          <h3 class=\"display-3 font-weight-bold text-white\">Title</h3>\n        </div>\n\n        <div className=\"container query-container\">\n\n          <br></br>\n          <div className=\"dropdown-container\">\n            <select value={this.state.selectedState} onChange={this.handleChange} className=\"dropdown\" id=\"statesDropdown\">\n              <option select value> -- Select a State -- </option>\n              {this.state.states}\n            </select>\n            <button className=\"submit-btn\" id=\"stateSubmitBtn\" onClick={this.submitState}>Submit</button>\n          </div>\n          <div className=\"jumbotron\">\n            {this.state.tableATitle}\n            <div className=\"query-container\">\n              {this.state.tableAHeader}\n              <div className=\"results-container\" id=\"results\">\n                {this.state.query}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}