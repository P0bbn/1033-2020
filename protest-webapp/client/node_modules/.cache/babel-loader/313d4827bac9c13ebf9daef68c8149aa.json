{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Puneet\\\\Documents\\\\Penn MCIT\\\\Fall 2020\\\\550\\\\Project\\\\repo\\\\protest-webapp\\\\client\\\\src\\\\components\\\\StateChart.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js';\nconst data = {\n  labels: [],\n  datasets: [{\n    label: 'Total Events',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,92,212,1)',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: []\n  }]\n};\nexport default class LineDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Line Example\"), /*#__PURE__*/React.createElement(Line, {\n      ref: \"chart\",\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  componentDidMount() {\n    const {\n      datasets\n    } = this.refs.chart.chartInstance.data;\n    data.datasets[0].data = this.props.chartData;\n    data.labels = this.props.chartLabel;\n    console.log(datasets[0].data);\n  }\n\n}\n/*\nclass StateChart extends React.Component{\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n        this.state={\n            chartData: props.chartData\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.chartReference);\n    }\n\n    render() {\n        return(\n            <Line ref={this.chartReference} data={this.props.data} options={{}} />\n        );\n    }\n\n}\n\nexport default StateChart;\n*/\n\n/*\n\n<canvas ref={this.chartRef} />\n\n\nreturn(\n            <div className=\"stateChart\">\n\n                <Line\n                    data={this.props.chartData}\n                    options={{\n                        title:{\n                            display:this.props.displayTitle,\n                            text: 'Number of Events per Day ' + this.props.location,\n                            fontsize:25\n                        },\n                        legend:{\n                            display:this.props.displayLegend,\n                            position:this.props.legendPosition\n                        }\n\n                    }}\n                />\n            </div>\n        );\n*/","map":{"version":3,"sources":["C:/Users/Puneet/Documents/Penn MCIT/Fall 2020/550/Project/repo/protest-webapp/client/src/components/StateChart.js"],"names":["React","Line","Chart","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","LineDemo","Component","constructor","props","chartRef","createRef","render","componentDidMount","refs","chart","chartInstance","chartData","chartLabel","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEI,MAAMC,IAAI,GAAG;AACPC,EAAAA,MAAM,EAAE,EADD;AAEPC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,cADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,sBAJnB;AAKEC,IAAAA,WAAW,EAAE,mBALf;AAMEC,IAAAA,UAAU,EAAE,EANd;AAOEC,IAAAA,gBAAgB,EAAE,GAPpB;AAQEC,IAAAA,eAAe,EAAE,OARnB;AASEC,IAAAA,gBAAgB,EAAE,oBATpB;AAUEC,IAAAA,oBAAoB,EAAE,MAVxB;AAWEC,IAAAA,gBAAgB,EAAE,CAXpB;AAYEC,IAAAA,gBAAgB,EAAE,CAZpB;AAaEC,IAAAA,yBAAyB,EAAE,oBAb7B;AAcEC,IAAAA,qBAAqB,EAAE,qBAdzB;AAeEC,IAAAA,qBAAqB,EAAE,CAfzB;AAgBEC,IAAAA,WAAW,EAAE,CAhBf;AAiBEC,IAAAA,cAAc,EAAE,EAjBlB;AAkBEnB,IAAAA,IAAI,EAAE;AAlBR,GADQ;AAFH,CAAb;AA0BJ,eAAe,MAAMoB,QAAN,SAAuBvB,KAAK,CAACwB,SAA7B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB3B,KAAK,CAAC4B,SAAN,EAAhB;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACT,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,OAAV;AAAkB,MAAA,IAAI,EAAE1B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMC;;AAEH2B,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEzB,MAAAA;AAAF,QAAe,KAAK0B,IAAL,CAAUC,KAAV,CAAgBC,aAAhB,CAA8B9B,IAAnD;AACAA,IAAAA,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiBF,IAAjB,GAAwB,KAAKuB,KAAL,CAAWQ,SAAnC;AACA/B,IAAAA,IAAI,CAACC,MAAL,GAAc,KAAKsB,KAAL,CAAWS,UAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhC,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAxB;AACD;;AAtBmD;AAyBtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Line} from 'react-chartjs-2';\nimport Chart from 'chart.js'\n\n    const data = {\n          labels: [],\n          datasets: [\n            {\n              label: 'Total Events',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(75,192,192,0.4)',\n              borderColor: 'rgba(75,92,212,1)',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: 'rgba(75,192,192,1)',\n              pointBackgroundColor: '#fff',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: []\n            }\n          ]\n        };\n\nexport default class LineDemo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n        \n\n    }\n\n    render() {\n    return (\n      <div>\n        <h2>Line Example</h2>\n        <Line ref=\"chart\" data={data} />\n      </div>\n    );\n    }\n\n  componentDidMount() {\n    const { datasets } = this.refs.chart.chartInstance.data\n    data.datasets[0].data = this.props.chartData\n    data.labels = this.props.chartLabel\n    console.log(datasets[0].data);\n  }\n}\n\n/*\nclass StateChart extends React.Component{\n    constructor(props) {\n        super(props);\n        this.chartRef = React.createRef();\n        this.state={\n            chartData: props.chartData\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.chartReference);\n    }\n\n    render() {\n        return(\n            <Line ref={this.chartReference} data={this.props.data} options={{}} />\n        );\n    }\n\n}\n\nexport default StateChart;\n*/\n/*\n\n<canvas ref={this.chartRef} />\n\n\nreturn(\n            <div className=\"stateChart\">\n\n                <Line\n                    data={this.props.chartData}\n                    options={{\n                        title:{\n                            display:this.props.displayTitle,\n                            text: 'Number of Events per Day ' + this.props.location,\n                            fontsize:25\n                        },\n                        legend:{\n                            display:this.props.displayLegend,\n                            position:this.props.legendPosition\n                        }\n\n                    }}\n                />\n            </div>\n        );\n*/"]},"metadata":{},"sourceType":"module"}